namespace Maps {
    void generateStatStrings();
}

// enum for all stat indexes 
// easier to refer back to stat names
// total stats are from 0 to 30, game stats from 31 to end
enum stats {
    wins,
    losses,
    mvps,
    games,
    // end of stats without game counterpart
    STATSWITHOUTGAME = games,
    goals,
    demos,
    deaths,
    exterms,
    aerialGoals,
    backwardsGoals,
    bicycleGoals,
    longGoals,
    turtleGoals,
    poolShots,
    overtimeGoals,
    hatTricks,
    assists,
    playmakers,
    saves,
    epicSaves,
    saviors,
    shots,
    centers,
    clears,
    firstTouchs,
    damages,
    ultraDamages,
    lowFives,
    highFives,
    swishs,
    bicycleHits,
    points,
    totalSaves,
    ownGoals,
    // last stat with normal output type
    ENDNORMALSTATS = ownGoals + 1,
    timePlayed = ENDNORMALSTATS,
    offenseTime,
    defenseTime,
    // total number of stats in the stat array
    NUMSTATS
};

static std::string statStringsStandard[NUMSTATS] = {
    "wins",
    "losses",
    "mvps",
    "games",
    "goals",
    "demolitions",
    "deaths",
    "exterminations",
    "aerialGoals",
    "backwardsGoals",
    "bicycleGoals",
    "longGoals",
    "turtleGoals",
    "poolShots",
    "overtimeGoals",
    "hatTricks",
    "assists",
    "playmakers",
    "saves",
    "epicSaves",
    "saviors",
    "shots",
    "centers",
    "clears",
    "firstTouchs",
    "damages",
    "ultraDamages",
    "lowFives",
    "highFives",
    "swishs",
    "bicycleHits",
    "points",
    "totalSaves",
    "ownGoals",
    "timePlayed",
    "offenseTime",
    "defenseTime"
};

static const char* statCharStandard[NUMSTATS] = {
    "Wins",
    "Losses",
    "MVPs",
    "Games",
    "Goals",
    "Demolitions",
    "Deaths",
    "Exterminations",
    "Aerial Goals",
    "Backwards Goals",
    "Bicycle Goals",
    "Long Goals",
    "Turtle Goals",
    "Pool Shots",
    "Overtime Goals",
    "Hat Tricks",
    "Assists",
    "Playmakers",
    "Saves",
    "Epic Saves",
    "Saviors",
    "Shots",
    "Centers",
    "Clears",
    "First Touchs",
    "Damages",
    "Ultra Damages",
    "Low Fives",
    "High Fives",
    "Swishes",
    "Bicycle Hits",
    "Points",
    "Total Saves",
    "Own Goals",
    "Time Played",
    "Offense Time",
    "Defense Time"
};

extern std::string renderStringsStandard[NUMSTATS];

extern std::string statStringsGame[NUMSTATS];
extern std::string renderStringsGame[NUMSTATS];

extern std::string statStringsAverage[NUMSTATS];
extern std::string renderStringsAverage[NUMSTATS];

static const std::map<std::string, int> eventDictionary = {
    { "Demolish", demos},
    { "Demolition", exterms},
    { "Goal", goals},
    { "Win", wins},
    { "MVP", mvps},
    { "AerialGoal", aerialGoals},
    { "BackwardsGoal", backwardsGoals},
    { "BicycleGoal", bicycleGoals},
    { "LongGoal", longGoals},
    { "TurtleGoal", turtleGoals},
    { "PoolShot", poolShots},
    { "OvertimeGoal", overtimeGoals},
    { "HatTrick", hatTricks},
    { "Assist", assists},
    { "Playmaker", playmakers},
    { "Save", saves},
    { "EpicSave", epicSaves},
    { "Savior", saviors},
    { "Shot", shots},
    { "Center", centers},
    { "Clear", clears},
    { "FirstTouch", firstTouchs},
    { "BreakoutDamage", damages},
    { "BreakoutDamageLarge", ultraDamages},
    { "LowFive", lowFives},
    { "HighFive", highFives},
    { "HoopsSwishGoal", swishs},
    { "BicycleHit", bicycleHits},
    { "OwnGoal", ownGoals}
};

enum otherStats {
    shootingPercentage,
    gameShootingPercentage,
    kDRatio,
    gameKDRatio,
    possibleExterminations,
    missedExterminationPercent,
    winPercentage,
    NUMOTHERSTATS
};

static std::string statStringsOther[NUMOTHERSTATS] = {
    "shootingPercentage",
    "gameShootingPercentage",
    "kDRatio",
    "gameKDRatio",
    "possibleExterminations",
    "missedExterminationPercent",
    "winPercentage"
};

static const char* statCharOther[NUMOTHERSTATS] = {
    "Shooting Percentage",
    "Game Shooting Percentage",
    "KD Ratio",
    "Game KD Ratio",
    "Possible Exterminations",
    "Missed Extermination Percent",
    "Win Percentage"
};

extern std::string renderStringsOther[NUMOTHERSTATS];

enum careerStats {
    FirstTouch,
    Shot,
    Goal,
    Center,
    HatTrick,
    Clear,
    Win,
    MVP,
    Assist,
    Demolish,
    Save,
    Loss,
    AerialHit,
    EpicSave,
    LongGoal,
    PoolShot,
    BicycleHit,
    BackwardsGoal,
    JuggleHit,
    Playmaker,
    OvertimeGoal,
    Savior,
    FewestBallTouches,
    CarTouches,
    FastestGoal,
    SlowestGoal,
    FurthestGoal,
    MostBallTouches,
    MostBoostPickups,
    Demolition,
    BicycleGoal,
    AerialGoal,
    FreezeSave,
    OwnGoal,
    TurtleGoal,
    FewestBoostPickups,
    BreakoutDamage,
    BreakoutDamageLarge,
    TimePlayed,
    LowFive,
    HoopsSwishGoal,
    BallHit,
    HighFive,
    BoostPickups,
    Game,
    NUMCAREERSTATS
};

static const std::map<std::string, int> eventDictionaryCareer = {
    { "FirstTouch", FirstTouch },
    { "Shot", Shot },
    { "Goal", Goal },
    { "Center", Center },
    { "HatTrick", HatTrick },
    { "Clear", Clear },
    { "Win", Win },
    { "MVP", MVP },
    { "Assist", Assist },
    { "Demolish", Demolish },
    { "Save", Save },
    { "Loss", Loss },
    { "AerialHit", AerialHit },
    { "EpicSave", EpicSave },
    { "LongGoal", LongGoal },
    { "PoolShot", PoolShot },
    { "BicycleHit", BicycleHit },
    { "BackwardsGoal", BackwardsGoal },
    { "JuggleHit", JuggleHit },
    { "Playmaker", Playmaker },
    { "OvertimeGoal", OvertimeGoal },
    { "Savior", Savior },
    { "FewestBallTouches", FewestBallTouches },
    { "CarTouches", CarTouches },
    { "FastestGoal", FastestGoal },
    { "SlowestGoal", SlowestGoal },
    { "FurthestGoal", FurthestGoal },
    { "MostBallTouches", MostBallTouches },
    { "MostBoostPickups", MostBoostPickups },
    { "Demolition", Demolition },
    { "BicycleGoal", BicycleGoal },
    { "AerialGoal", AerialGoal },
    { "FreezeSave", FreezeSave },
    { "OwnGoal", OwnGoal },
    { "TurtleGoal", TurtleGoal },
    { "FewestBoostPickups", FewestBoostPickups },
    { "BreakoutDamage", BreakoutDamage },
    { "BreakoutDamageLarge", BreakoutDamageLarge },
    { "TimePlayed", TimePlayed },
    { "LowFive", LowFive },
    { "HoopsSwishGoal", HoopsSwishGoal },
    { "BallHit", BallHit },
    { "HighFive", HighFive },
    { "BoostPickups", BoostPickups }
};

static std::string statStringsCareer[NUMCAREERSTATS] = {
    "CareerFirstTouches",
    "CareerShots",
    "CareerGoals",
    "CareerCenters",
    "CareerHatTricks",
    "CareerClears",
    "CareerWins",
    "CareerMVPs",
    "CareerAssists",
    "CareerDemolitions",
    "CareerSaves",
    "CareerLosses",
    "CareerAerialHits",
    "CareerEpicSaves",
    "CareerLongGoals",
    "CareerPoolShots",
    "CareerBicycleHits",
    "CareerBackwardsGoals",
    "CareerJuggleHits",
    "CareerPlaymakers",
    "CareerOvertimeGoals",
    "CareerSaviors",
    "CareerFewestBallTouches",
    "CareerCarTouches",
    "CareerFastestGoals",
    "CareerSlowestGoals",
    "CareerFurthestGoals",
    "CareerMostBallTouches",
    "CareerMostBoostPickups",
    "CareerExterminations",
    "CareerBicycleGoals",
    "CareerAerialGoals",
    "CareerFreezeSaves",
    "CareerOwnGoals",
    "CareerTurtleGoals",
    "CareerFewestBoostPickups",
    "CareerBreakoutDamages",
    "CareerBreakoutDamagesLarge",
    "CareerTimePlayed",
    "CareerLowFives",
    "CareerHoopsSwishGoals",
    "CareerBallHits",
    "CareerHighFives",
    "CareerBoostPickups",
    "CareerGames"
};

static const char * statCharsCareer[NUMCAREERSTATS] = {
    "First Touches",
    "Shots",
    "Goals",
    "Centers",
    "Hat Tricks",
    "Clears",
    "Wins",
    "MVPs",
    "Assists",
    "Demolitions",
    "Saves",
    "Losses",
    "Aerial Hits",
    "Epic Saves",
    "Long Goals",
    "Pool Shots",
    "Bicycle Hits",
    "Backwards Goals",
    "Juggle Hits",
    "Playmakers",
    "Overtime Goals",
    "Saviors",
    "Fewest Ball Touches",
    "Car Touches",
    "Fastest Goals",
    "Slowest Goals",
    "Furthest Goals",
    "Most Ball Touches",
    "Most Boost Pickups",
    "Exterminations",
    "Bicycle Goals",
    "Aerial Goals",
    "Freeze Saves",
    "Own Goals",
    "Turtle Goals",
    "Fewest Boost Pickups",
    "Breakout Damages",
    "Breakout Damages Large",
    "Time Played",
    "Low Fives",
    "Hoops Swish Goals",
    "Ball Hits",
    "High Fives",
    "Boost Pickups",
    "Games"
};

extern std::string renderStringsCareerTotal[NUMCAREERSTATS];
extern std::string renderStringsCareerPrivate[NUMCAREERSTATS];
extern std::string renderStringsCareerCasual[NUMCAREERSTATS];
extern std::string renderStringsCareerRanked[NUMCAREERSTATS];
extern std::string renderStringsCareerAverage[NUMCAREERSTATS];

extern std::string renderStringsTeam[ENDNORMALSTATS];
extern std::string renderStringsOpponent[ENDNORMALSTATS];